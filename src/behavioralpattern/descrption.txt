Behavioral patterns provide solution for the better interaction between objects
and how to provide lose coupling and flexibility to extend easily.

1) Chain of responsibility:

     Chain of responsibility pattern is used to achieve loose coupling in software design
     where a request from the client is passed to a chain of objects to process them.
     Then the object in the chain will decide themselves who will be processing the request
     and whether the request is required to be sent to the next object in the chain or not.

2) Command Pattern
      It is a behavioral design pattern that lets you turn a request into stand-alone object,
      which can be used to parametrize objects with different requests,
      queue or log requests, and support un-doable operations.





